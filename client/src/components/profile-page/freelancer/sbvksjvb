import React, { useEffect, useState } from "react";
import api from "../../../lib/axios";

const Jobs = () => {
  const [jobs, setJobs] = useState([]);
  const [selectedJob, setSelectedJob] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchJobs = async () => {
      try {
        const res = await api.get("/job-applications/user");
        setJobs(res.data.applications || []);
      } catch (err) {
        console.error("Failed to fetch jobs:", err);
        setJobs([]);
      } finally {
        setLoading(false);
      }
    };

    fetchJobs();
  }, []);

  return (
    <>
      {loading ? (
        <p>Loading job applications...</p>
      ) : jobs.length === 0 ? (
        <p className="text-gray-500">You havenâ€™t applied to any jobs yet.</p>
      ) : (
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {jobs.map((job, index) => (
            <div
              key={index}
              className="border p-4 rounded-lg shadow hover:shadow-md transition cursor-pointer"
              onClick={() => setSelectedJob(job)}
            >
              <h2 className="text-lg font-semibold">{job.job_title}</h2>
              <p className="text-sm text-gray-600 mt-1">{job.proposal}</p>
              <div className="text-sm mt-2">
                <span className="font-medium">Budget:</span> {job.expected_budget}
              </div>
              <div className="text-xs text-gray-400 mt-1">
                Submitted: {new Date(job.submitted_at).toLocaleString()}
              </div>
            </div>
          ))}
        </div>
      )}

      <dialog id="apply-modal" className="modal" open={!!selectedJob}>
        <div className="modal-box">
          {selectedJob && (
            <>
              <h3 className="font-bold text-lg">{selectedJob.job_title}</h3>
              <p className="py-2">{selectedJob.proposal}</p>
              <p className="text-sm">
                <span className="font-medium">Expected Budget:</span> {selectedJob.expected_budget}
              </p>
              <p className="text-xs text-gray-400 mt-2">
                Submitted: {new Date(selectedJob.submitted_at).toLocaleString()}
              </p>
            </>
          )}
          <form method="dialog" className="modal-backdrop mt-4">
            <button className="btn">Close</button>
          </form>
        </div>
      </dialog>
    </>
  );
};

export default Jobs;
